service: stream-speculator
frameworkVersion: '2'
configValidationMode: 'error'
variablesResolutionMode: 20210326
useDotenv: true

plugins:
  - serverless-domain-manager

custom:
  customDomain:
    http:
      domainName: ${env:DOMAIN_NAME}
      certificateName: ${env:DOMAIN_CERTIFICATE_NAME}
      createRoute53Record: true
      endpointType: 'regional'
      autoDomain: true

provider:
  name: aws 
  runtime: nodejs14.x
  memorySize: 128
  lambdaHashingVersion: 20201221
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  stackName: ${self:service}-${self:provider.stage}
  environment:
    PUBLIC_FOLDER_PATH: src/public
    REGION: ${self:provider.region}
    SQS_QUEUE_URL: !Ref TaskQueue
    TWITCH_CLIENT_ID: ${env:TWITCH_CLIENT_ID}
    TWITCH_CLIENT_SECRET: ${env:TWITCH_CLIENT_SECRET}
    TWITCH_WEBHOOK_SECRET: ${env:TWITCH_WEBHOOK_SECRET}
    TWITCH_WEBHOOK_CALLBACK: ${env:TWITCH_WEBHOOK_CALLBACK}
    FAUNADB_SECRET: ${env:FAUNADB_SECRET}
    COOKIE_SIGNING_KEY: ${env:COOKIE_SIGNING_KEY}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - sqs:SendMessage
        - sqs:SendMessageBatch
      Resource:
        - !GetAtt TaskQueue.Arn
  
package:
  patterns:
    - '!./**'
    - node_modules/**
    - build/server/**
    - build/common/**
    - src/public/**

functions:
  default:
    handler: build/server/ServerlessExpressApp.default
    events:
      - httpApi: '*'
  taskHandler:
    handler: build/server/handlers/scheduledTaskHandler.default
    timeout: 15
    events:
      - sqs:
          arn: !GetAtt TaskQueue.Arn
          
resources:
  Resources:
    TaskQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:service}-task-queue
  
